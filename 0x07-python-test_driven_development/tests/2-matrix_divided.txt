>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback(most recent last call)
...
ZeroDivisionError: division by zero

>>> matrix_divided([[]], 1 )
Traceback(most recent last call)
...
AttributrError:Matrix should not be empty

>>> matrix_divided([[1, 2], [3, 4]], "hello")
Traceback(most recent last call)
...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [3, 4]], 1 )
Traceback(most recent last call)
...
TypeError:Each row of the matrix must have the same size

>>> matrix_divided([["hello", "world"], [3, 4]], 1 )
Traceback(most recent last call)
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([["Hello"]], 1 )
Traceback(most recent last call)
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

>>> matrix_divided([[1, 2], [3, 4]], 1.2 )
[[0.83, 1.67], [2.5, 3.33]]

>>> matrix_divided([[1, 2], [3, 4]], -1 )
[[-1, -2], [-3, -4]]

>>> matrix_divided([[1, 2], [3, 4]] )
Traceback(most recent last call)
...
TypeError:matrix_divided() missing 'div' argument

>>> matrix_divided( )
Traceback(most recent last call)
...
TypeError:matrix_divided() missing 'div'  and 'matrix' arguments






